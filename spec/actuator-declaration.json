{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "http://redlab.epfl.ch/smartdevice",
    "resourcePath": "/actuator",
    "protocol": "WebSocket",
    "produces": [
        "application/json"
    ],
    "apis": [
        {
            "path": "/actuator/",
            "operations": [
                {
                    "method": "Send",
                    "nickname": "getActuators",
                    "summary": "List all actuators and their metadata",
                    "type": "array",
                    "items": {
                        "$ref": "Actuator"
                    },
                    "parameters": [
                        {
                            "name": "body",
                            "description": "the payload for the getActuators service",
                            "required": true,
                            "paramType": "body",
                            "type": "ActuatorMetadataRequest",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 404,
                            "message": "No actuators found"
                        }
                    ]
                },
                {
                    "method": "Send",
                    "summary": "Send new data to the actuator with the given actuator identifier",
                    "notes": "The parameters go into a JSON object send over the WebSocket",
                    "type": "ActuatorResponse",
                    "nickname": "sendActuatorData",
                    "parameters": [
                        {
                            "name": "body",
                            "description": "The payload for the sendActuatorData service",
                            "required": true,
                            "type": "ActuatorRequest",
                            "paramType": "body",
                            "allowMultiple": false
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 400,
                            "message": "Actuator identifier not found"
                        },
                        {
                            "code": 401,
                            "message": "The booking code is not valid"
                        },
                        {
                            "code": 422,
                            "message": "The request body is unprocessable"
                        }
                    ]
                }
            ]
        }
    ],
    "models": {
        "Actuator": {                                   /* DO WE NEED ENCODING? */
            "id": "Actuator",                           /* DO WE NEED TO PUT TIMESTAMP OF THE LAST UPDATE IN THE METADATA OR SHOULD WE PUT IT ONLY IN THE RESPONSE? ADDING IT TO GETACTUATORS, WOULD MAKE THE METADATA DYNAMIC... */
            "required": [
                "actuatorId", "fullName"
            ],
            "properties": {
                "actuatorId": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "webSocketType": {
                    "type": "string",
                    "description": "the type of WebSocket. WebSockets can either be binary or textual.",
                    "enum": [
                        "text",
                        "binary"
                    ],
                    "defaultValue": "text"
                },
                "singleWebSocketRecommended": {
                    "type": "boolean",
                    "description": "If this field is set to true it means that the smart device expects that a client opens a dedicated websocket for to read from this value",
                    "defaultValue": false
                },
                "consumes": {                   /* should this be on sensor or value level? */
                    "type": "string",
                    "description": "The mime-type of the data that is consumed by this actuator. A list of mime types can be found at http://en.wikipedia.org/wiki/Internet_media_type",
                    "defaultValue": "application/json"
                },
                "produces": {                   /* should this be on sensor or value level? */
                    "type": "string",
                    "description": "The mime-type of the data that is produced by this actuator. A list of mime types can be found at http://en.wikipedia.org/wiki/Internet_media_type",
                    "defaultValue": "application/json"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "Value"
                    }
                },
                "configuration": {
                    "type": "array",
                    "description": "The configuration consists of an array of JSON objects that consist of parameter and type",
                    "items": {
                        "$ref": "ConfigurationMetadataItem"    /* extended Swagger with object type */
                    }
                },
                "accessMode": {
                    "type": "AccessMode"
                }
            }
        },
        "ActuatorMetadataRequest": {
            "id": "ActuatorMetadataRequest",
            "required": [
                "authToken", "method"
            ],
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                }
            }
        },
        "ActuatorRequest": {
            "id": "ActuatorRequest",
            "required": [
                "authToken", "method", "actuatorId"
            ],
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "actuatorId": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "description": "An ordered array with all the value names of this sensor. The same order will be applied to the data array and lastMeasured array.",
                    "items": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "array",
                    "description": "An ordered array with all the data values of this sensor. Each data element in the array should be ordered in the same position of its corresponding value elements in the values array.",
                    "items": {
                        "type": "any"           /* extended Swagger with any type -- this represents any possible type */
                    }
                },
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "ConfigurationItem"
                    }
                }
            }
        },
        "ActuatorResponse": {
            "id": "ActuatorResponse",
            "required": [
                "success"
            ],
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "lastMeasured": {            /* added lastUpdated here */
                    "type": "date-time"
                },
                "payload": {
                    "type": "object",
                    "description": "The payload can be useful for describing a result that is returned. Since results can differ from acknowledgements to result data, the field is optional and can contain any JSON object."
                }
            }
        }
    }
}
