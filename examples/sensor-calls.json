/* WebSocket API: /sensor
 *  returns:
 * */
[
/**
 * getSensorMetadata
 * @param @class SimpleRequest
 * @return @class SensorMetadataResponse
 */
//CALL:
{
    "method": "getSensorMetadata"
},

//RETURN:
{
    "method": "getSensorMetadata",
    "sensors": [
        {
            "sensorId": "3D-pos",
            "fullName": "3D position",
            "description": "the 3D position of the robot arm",
            "webSocketType": "text",
            "produces": "application/json",
            "values": [
                {
                    "name": "X",
                    "unit": "cm",
                    "lastMeasured": "2014-06-23T18:25:43.511Z",
                    "rangeMinimum": 0.00,
                    "rangeMaximum": 100.00,
                    "rangeStep": 0.10,
                    "updateFrequency": 10
                },
                {
                    "name": "Y",
                    "unit": "cm",
                    "lastMeasured": "2014-06-23T18:25:43.511Z",
                    "rangeMinimum": 0.00,
                    "rangeMaximum": 100.00,
                    "rangeStep": 0.10,
                    "updateFrequency": 10
                },
                {
                    "name": "Z",
                    "unit": "cm",
                    "lastMeasured": "2014-06-23T18:25:43.511Z",
                    "rangeMinimum": 0.00,
                    "rangeMaximum": 100.00,
                    "rangeStep": 0.10,
                    "updateFrequency": 10
                }
            ],
            "configuration":[
                {
                    "parameter": "precision",
                    "description": "The precision is expressed as a power of 10, e.g. to allow a precision of 0.01 the value will be -2 (from 10^-2).",
                    "type": "int"
                }
            ],
            "accessMode": {
                "type": "push",
                "nominalUpdateInterval": 100,
                "userModifiableFrequency": true
            }
        },
        {
            "sensorId": "video",
            "fullName": "video stream",
            "description": "front camera video stream",
            "webSocketType": "binary",
            "singleWebSocketRecommended": true,
            "produces": "image/jpeg",
            "values": [
                {
                    "name": "front",
                    "lastMeasured": "2014-06-23T18:28:43.617Z",
                    "updateFrequency": 10
                }
            ],
            "configuration":[
                {
                    "parameter": "width",
                    "type": "int"
                },
                {
                    "parameter": "height",
                    "type": "int"
                },
                {
                    "parameter": "compression",
                    "description": "The JPEG compression quality, ranging from 0 (lowest quality) to 100 (highest quality).",
                    "type": "float"
                },
                {
                    "parameter": "colourFilter",
                    "description": "The colour value in an array of 3 decimal RGB values",
                    "type": "array",
                    "items": "int"
                }
            ],
            "accessMode": {
                "type": "stream",
                "nominalUpdateInterval": 10,
                "userModifiableFrequency": true
            }
        }
    ]
},

/**
 *  getSensorData
 *  @param @class SensorDataRequest
 *  @return @class SensorDataResponse
 **/
//CALL:
{
    "authToken": "dskds909ds8a76as675sa54",
    "method": "getSensorData",
    "sensorId": "3D-pos",
    "updateFrequency": 20,
    "configuration": [
        {
            "parameter": "precision",
            "value": 3
        }
    ],
    "accessRole": "controller"
},

//example to interrupt the current client
{
    "authToken": "dskds909ds8a76as675sa54",
    "method": "getSensorData",
    "sensorId": "3D-pos",
    "updateFrequency": 20,
    "accessRole": "interrupt",
    "configuration": [
        {
            "parameter": "precision",
            "value": -3
        }
    ]
},

//other example for video:
{
    "authToken": "dskds909ds8a76as675sa54",
    "method": "getSensorData",
    "sensorId": "video",
    "updateFrequency": 25,
    "accessRole": "controller",
    "configuration": [
        {
            "parameter": "width",
            "value": 640
        },
        {
            "parameter": "height",
            "value": 480
        },
        {
            "parameter": "compression",
            "value": 92.3
        },
        {
            "parameter": "colorFilter",
            "value": [60, 27, 229]
        }
    ]
},

//RETURN:
{
    "method": "getSensorData",
    "sensorId": "3D-pos",
    "accessRole": "controller",
    "responseData": {
        "valueNames": ["X", "Y", "Z"],
        "data": [12.396, 23.681, 43.303],
        "lastMeasured": ["2014-06-23T18:28:43.511Z", "2014-06-23T18:28:43.511Z", "2014-06-23T18:28:43.511Z"]
    }
},

//CALL stop sending a sensor value
{
    "method": "getSensorData",
    "sensorId": "3D-pos",
    "updateFrequency": 0
}



]