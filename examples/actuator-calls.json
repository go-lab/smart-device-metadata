/* WebSocket API: /actuator
 *  returns:
 * */
[
/**
 * getActuators
 * @param @class SimpleRequest
 * @return array @class Actuator
 */
//CALL:
{
    "method": "getActuatorMetadata"
},


//RETURN:
{
    "method": "getActuatorMetadata",
    "actuators":
    [
        {
            "actuatorId": "motor",
            "fullName": "Wheel motor",
            "description": "operate the motor of the wheel",
            "webSocketType": "text",
            "produces": "application/json",
            "consumes": "application/json",
            "values": [
                {
                    "name": "left",
                    "unit": "radian",
                    "type": "float",
                    "rangeMinimum": 0.00,
                    "rangeMaximum": 3.14,
                    "rangeStep": 0.10,
                    "updateFrequency": 10,
                    "lastMeasured": "2014-06-23T19:25:43.511Z"
                },
                {
                    "name": "right",
                    "unit": "radian",
                    "type": "float",
                    "rangeMinimum": 0.00,
                    "rangeMaximum": 3.14,
                    "rangeStep": 0.10,
                    "updateFrequency": 10,
                    "lastMeasured": "2014-06-23T19:25:43.511Z"
                }
            ],
            "configuration":[
                {
                    "parameter": "precision",
                    "description": "The precision is expressed as a power of 10, e.g. to allow a precision of 0.01 the value will be -2 (from 10^-2).",
                    "type": "int"
                }
            ],
            "accessMode": {
                "type": "push",
                "nominalUpdateInterval": 100,
                "userModifiableFrequency": true
            }
        }
    ]
},

/**
 *  sendActuatorData
 *  @param @class ActuatorDataRequest
 *  @return @class ActuatorDataResponse
 **/
//CALL:
{
    "authToken": "dskds909ds8a76as675sa54",
    "method": "sendActuatorData",
    "accessRole": "controller",
    "actuatorId": "motor",
    "valueNames": ["left"],
    "data": [1.90]
},

//RETURN:
{
    "method": "sendActuatorData",
    "lastMeasured": "2014-06-23T20:25:43.741Z",
    "accessRole": "controller",
    "payload": {
        /* could be useful for returning a result, but payload is optional */
        "actuatorId": "motor",
        "valueNames": ["left"],
        "data": [1.90]
    }
},

//RETURN when in ObserverMode:
{
    "method": "sendActuatorData",
    "accessRole": "observer",
    "observerMode": {
        "queueSize": 7,
        "queuePosition": 4,
        "estimatedTimeUntilControl": 736
    }
}

]